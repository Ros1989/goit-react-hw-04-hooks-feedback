{"version":3,"sources":["components/Section/StyledComponents.js","components/Section/Section.jsx","components/FeedbackOptions/StyledComponents.js","components/FeedbackOptions/FeedbackOptions.jsx","components/Statistics/StyledComponents.js","components/Statistics/Statistics.jsx","components/Notification/StyledComponents.js","components/Notification/Notification.jsx","components/App.js","index.js"],"names":["PageSection","styled","section","SectionTitle","h2","Section","title","children","OptionsBlock","div","Button","button","props","BgColor","FeedbackOptions","onLeaveFeedback","type","onClick","StatisticsBlock","ul","StatisticsItem","li","Statistics","good","neutral","bad","total","positivePercentage","NotificationTitle","h3","Notification","App","useState","setGood","setNeutral","setBad","percentage","Math","round","countPositiveFeedbackPercentage","name","prevState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"stBAEA,IAAMA,EAAcC,IAAOC,QAAV,KAUXC,EAAeF,IAAOG,GAAV,KCRH,SAASC,EAAT,GAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACvC,OACE,eAACP,EAAD,WACE,cAACG,EAAD,UAAeG,IACdC,K,ujBCNP,IAAMC,EAAeP,IAAOQ,IAAV,KAQZC,EAAST,IAAOU,OAAV,KAGU,SAAAC,GAAK,OAAIA,EAAMC,WCTtB,SAASC,EAAT,GAA+C,IAApBC,EAAmB,EAAnBA,gBACxC,OACE,eAACP,EAAD,WACE,cAACE,EAAD,CACEM,KAAK,SACLC,QAAS,kBAAMF,EAAgB,SAC/BF,QAAS,QAHX,kBAOA,cAACH,EAAD,CACEM,KAAK,SACLC,QAAS,kBAAMF,EAAgB,YAC/BF,QAAS,SAHX,qBAOA,cAACH,EAAD,CACEM,KAAK,SACLC,QAAS,kBAAMF,EAAgB,QAC/BF,QAAS,MAHX,oB,qYCnBN,IAAMK,EAAkBjB,IAAOkB,GAAV,KAMfC,EAAiBnB,IAAOoB,GAAV,KCJL,SAASC,EAAT,GAMX,IALFC,EAKC,EALDA,KACAC,EAIC,EAJDA,QACAC,EAGC,EAHDA,IACAC,EAEC,EAFDA,MACAC,EACC,EADDA,mBAEA,OACE,eAACT,EAAD,WACE,eAACE,EAAD,oBAAuBG,KACvB,eAACH,EAAD,uBAA0BI,KAC1B,eAACJ,EAAD,mBAAsBK,KACtB,eAACL,EAAD,qBAAwBM,KACxB,eAACN,EAAD,iCACsBO,EADtB,U,qMCfN,IAAMC,EAAoB3B,IAAO4B,GAAV,KCER,SAASC,EAAT,GAAkC,IAAVxB,EAAS,EAATA,MACrC,OACE,mCACE,cAACsB,EAAD,UAAoBtB,MCDX,SAASyB,IAAO,IAAD,EAEJC,mBAAS,GAFL,mBAErBT,EAFqB,KAEfU,EAFe,OAGED,mBAAS,GAHX,mBAGrBR,EAHqB,KAGZU,EAHY,OAINF,mBAAS,GAJH,mBAIrBP,EAJqB,KAIhBU,EAJgB,KA8BtBT,EAN2BH,EAAOC,EAAUC,EAO5CW,EALkC,SAACV,EAAOH,GAC9C,OAAOc,KAAKC,MAAc,IAAPf,EAAcG,GAIhBa,CAAgCb,EAAOH,GAE1D,OACI,qCACE,cAAClB,EAAD,CAASC,MAAM,0BACf,cAACQ,EAAD,CAAiBC,gBA9BO,SAAAyB,GAC5B,OAAQA,GACN,IAAK,OACHP,GAAQ,SAAAQ,GAAS,OAAIA,EAAY,KACjC,MAEF,IAAK,UACHP,GAAW,SAAAO,GAAS,OAAIA,EAAY,KACpC,MACF,IAAK,MACHN,GAAO,SAAAM,GAAS,OAAIA,EAAY,KAChC,MAEF,QACE,WAiBA,cAACpC,EAAD,CAASC,MAAM,aAAf,SACGoB,EAAQ,EACP,cAACJ,EAAD,CACEC,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAAoBS,IAGtB,cAACN,EAAD,CAAcxB,MAAM,2BChDhCoC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACb,EAAD,MAEFc,SAASC,eAAe,W","file":"static/js/main.415575de.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nconst PageSection = styled.section`\n  padding-top: 25px;\n  padding-bottom: 25px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  max-width: 600px;\n  margin: 0 auto;\n  border: solid 1px blue;\n`;\nconst SectionTitle = styled.h2`\n  width: 100%;\n  text-align: center;\n  font-size: 2rem;\n  font-weight: 600;\n  color: brown;\n  text-transform: uppercase;\n  margin-bottom: 30px;\n`;\nexport { PageSection, SectionTitle };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { PageSection, SectionTitle } from './StyledComponents';\n\nexport default function Section({ title, children }) {\n  return (\n    <PageSection>\n      <SectionTitle>{title}</SectionTitle>\n      {children}\n    </PageSection>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string,\n};\n","import styled from 'styled-components';\n\nconst OptionsBlock = styled.div`\n  padding-top: 25px;\n  padding-bottom: 25px;\n  display: flex;\n  justify-content: center;\n  width: 80%;\n  margin: 0 auto;\n`;\nconst Button = styled.button`\n  height: 30px;\n  padding: 10px 20px;\n  background-color: ${props => props.BgColor};\n  border: none;\n  border-radius: 0.3rem;\n  font-size: 0.8rem;\n  color: black;\n  text-transform: uppercase;\n  cursor: pointer;\n  :not(:last-child) {\n    margin-right: 10px;\n  }\n\n  :hover {\n    transform: scale(1.1);\n  }\n`;\nexport { OptionsBlock, Button };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { OptionsBlock, Button } from './StyledComponents';\n\nexport default function FeedbackOptions({ onLeaveFeedback }) {\n  return (\n    <OptionsBlock>\n      <Button\n        type=\"button\"\n        onClick={() => onLeaveFeedback('good')}\n        BgColor={'green'}\n      >\n        Good\n      </Button>\n      <Button\n        type=\"button\"\n        onClick={() => onLeaveFeedback('neutral')}\n        BgColor={'yellow'}\n      >\n        Neutral\n      </Button>\n      <Button\n        type=\"button\"\n        onClick={() => onLeaveFeedback('bad')}\n        BgColor={'red'}\n      >\n        Bad\n      </Button>\n    </OptionsBlock>\n  );\n}\n\nFeedbackOptions.propTypes = {\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n","import styled from 'styled-components';\n\nconst StatisticsBlock = styled.ul`\n  width: 80%;\n  display: flex;\n  flex-wrap: wrap;\n  margin: 0 auto;\n`;\nconst StatisticsItem = styled.li`\n  width: 100%;\n  text-align: center;\n  font-size: 1.2rem;\n  color: black;\n  list-style: none;\n  font-weight: 500;\n  &:not(:last-child) {\n    margin-bottom: 15px;\n  }\n`;\nexport { StatisticsBlock, StatisticsItem };\n","import React from 'react';\nimport { StatisticsBlock, StatisticsItem } from './StyledComponents';\nimport PropTypes from 'prop-types';\n\nexport default function Statistics({\n  good,\n  neutral,\n  bad,\n  total,\n  positivePercentage,\n}) {\n  return (\n    <StatisticsBlock>\n      <StatisticsItem>Good: {good}</StatisticsItem>\n      <StatisticsItem>Neutral: {neutral}</StatisticsItem>\n      <StatisticsItem>Bad: {bad}</StatisticsItem>\n      <StatisticsItem>Total: {total}</StatisticsItem>\n      <StatisticsItem>\n        Positive feedback: {positivePercentage}&#37;\n      </StatisticsItem>\n    </StatisticsBlock>\n  );\n}\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};\n","import styled from 'styled-components';\n\nconst NotificationTitle = styled.h3`\n  width: 100%;\n  text-align: center;\n  font-size: 1rem;\n  font-weight: 600;\n  color: gray;\n  text-transform: uppercase;\n`;\n\nexport { NotificationTitle };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { NotificationTitle } from './StyledComponents';\n\nexport default function Notification({ title }) {\n  return (\n    <>\n      <NotificationTitle>{title}</NotificationTitle>\n    </>\n  );\n}\n\nNotification.propTypes = {\n  title: PropTypes.string,\n};\n","import { useState } from 'react';\nimport Section from './Section';\nimport FeedbackOptions from './FeedbackOptions';\nimport Statistics from './Statistics';\nimport Notification from './Notification/';\n\nexport default function App() {\n\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const handlerFeedbackButton = name => {\n    switch (name) {\n      case 'good':\n        setGood(prevState => prevState + 1);\n        break;\n\n      case 'neutral':\n        setNeutral(prevState => prevState + 1);\n        break;\n      case 'bad':\n        setBad(prevState => prevState + 1);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const countTotalFeedback = () => good + neutral + bad;\n  \n  const countPositiveFeedbackPercentage = (total, good) => {\n    return Math.round((good * 100) / total);\n  };\n\n  const total = countTotalFeedback();\n  const percentage = countPositiveFeedbackPercentage(total, good);\n\n  return (\n      <>\n        <Section title=\"Please leave feedback\"></Section>\n        <FeedbackOptions onLeaveFeedback={handlerFeedbackButton} />\n        <Section title=\"Statistics\">\n          {total > 0 ? (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={total}\n              positivePercentage={percentage}\n            />\n          ) : (\n            <Notification title=\"No feedback given\" />\n          )}\n        </Section>\n      </>\n  );\n    \n  }\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}